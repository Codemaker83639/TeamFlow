version: '3.8'

services:
  # Frontend Service (Vue.js)
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: teamflow_frontend
    ports:
      - "8080:80"
    volumes:
      - ./client:/app
      - /app/node_modules
    depends_on:
      - backend
    environment:
      - NODE_ENV=development
      - VUE_APP_API_URL=http://localhost:3000/api
    networks:
      - teamflow_network

  # Backend Service (NestJS)
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: teamflow_backend
    ports:
      - "3000:3000"
    volumes:
      - ./server:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgresql://teamflow_user:teamflow_password@postgres:5432/teamflow_db
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=teamflow_jwt_secret_key_2024
      - JWT_EXPIRATION=24h
      - PORT=3000
    networks:
      - teamflow_network
    restart: unless-stopped

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: teamflow_postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/scripts:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=teamflow_user
      - POSTGRES_PASSWORD=teamflow_password
      - POSTGRES_DB=teamflow_db
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    networks:
      - teamflow_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: teamflow_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass teamflow_redis_password
    networks:
      - teamflow_network
    restart: unless-stopped

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: teamflow_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    networks:
      - teamflow_network
    restart: unless-stopped

  # pgAdmin for database management (Development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: teamflow_pgadmin
    ports:
      - "8081:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=admin@teamflow.local
      - PGADMIN_DEFAULT_PASSWORD=adminpassword
      - PGADMIN_CONFIG_SERVER_MODE=False
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres
    networks:
      - teamflow_network
    profiles:
      - development

  # Redis Commander for Redis management (Development only)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: teamflow_redis_commander
    ports:
      - "8082:8081"
    environment:
      - REDIS_HOSTS=local:redis:6379:0:teamflow_redis_password
    depends_on:
      - redis
    networks:
      - teamflow_network
    profiles:
      - development

# Networks
networks:
  teamflow_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
